{"metadata": {"anaconda-cloud": {"environment": null, "summary": "\u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u044f\u0437\u044b\u043a\u0430 R \u0438\u0437 \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"}, "kernelspec": {"display_name": "R 3.3", "language": "R", "name": "ir33"}, "language_info": {"codemirror_mode": "r", "file_extension": ".r", "pygments_lexer": "r", "version": "3.3.0", "name": "R", "mimetype": "text/x-r-source"}}, "nbformat_minor": 1, "cells": [{"metadata": {}, "source": "# \u041f\u0440\u043e\u0441\u0442\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0442\u0440\u0443\u043a\u0446\u0438\u0439 (flow control)  \u0432 R\n\n\u0418\u043b\u044c\u044f \u041a\u043e\u0447\u0435\u0440\u0433\u0438\u043d 21.09.2016\n\n\u0412 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u044f\u0437\u044b\u043a\u0430\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u0442\u043e\u043a\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f (\u0446\u0438\u043a\u043b\u044b, \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440, \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0432\u044b\u0431\u043e\u0440\u0430) \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e  \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u043e\u0440\u043e\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. \u0412 \u044f\u0437\u044b\u043a\u0435 R \u0431\u0435\u0437 \u0446\u0438\u043a\u043b\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f  \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u041c\u044b \u0441\u043d\u0430\u0447\u0430\u043b\u0430  \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u0440\u0430\u0446\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u0430 \u0437\u0430\u0442\u0435\u043c \u043e\u0431\u0441\u0443\u0434\u0438\u043c \u043d\u0430 \u0447\u0442\u043e \u0438 \u0432 \u043a\u0430\u043a\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c.", "cell_type": "markdown"}, {"metadata": {}, "source": "## \u0421\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\n\n\u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0438\u0448\u0435\u0442\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0438\u043b\u0438 \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u0441\u0438\u043c\u0432\u043e\u043b \";\", \u0442\u043e \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432.", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 2", "text/html": "2", "text/markdown": "2", "text/latex": "2"}, "output_type": "display_data"}, {"metadata": {}, "data": {"text/plain": "[1] 52", "text/html": "52", "text/markdown": "52", "text/latex": "52"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "i<-1 ; i<-i+1 # \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\ni\ni+50", "cell_type": "code", "execution_count": 1}, {"metadata": {}, "source": "\u0410 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 \u0438\u043b\u0438 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 `{cmd1;cmd2;cmd3}` -- \u044d\u0442\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440. \u0421\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c  \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u0445 \u0438 \u0434\u043b\u044f \u0432\u044b\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "[1] 25\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "print({p <- 10;q <- 2; (p/q)^2 })", "cell_type": "code", "execution_count": 2}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 25", "text/html": "25", "text/markdown": "25", "text/latex": "25"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "{p <- 10;q <- 2; (p/q)^2 }", "cell_type": "code", "execution_count": 3}, {"metadata": {}, "source": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0433\u043e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 -- \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f", "cell_type": "markdown"}, {"metadata": {}, "source": "## \u0412\u0438\u0434\u0438\u043c\u043e\u0435 \u0438 \u043d\u0435\u0432\u0438\u0434\u0438\u043c\u043e\u0435 \u0432\u044b\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n\n\u0412\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 R \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u0435\u043d\u0438\u0438 \u043f\u0435\u0447\u0430\u0442\u0430\u044e\u0442 \u0441\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u0443 \u043d\u0435\u0433\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0440\u0430\u0432\u0435\u043d TRUE", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 4", "text/html": "4", "text/markdown": "4", "text/latex": "4"}, "output_type": "display_data"}, {"metadata": {}, "data": {"text/plain": "$value\n[1] 4\n\n$visible\n[1] TRUE\n", "text/html": "<dl>\n\t<dt>$value</dt>\n\t\t<dd>4</dd>\n\t<dt>$visible</dt>\n\t\t<dd>TRUE</dd>\n</dl>\n", "text/markdown": "$value\n:   4\n$visible\n:   TRUE\n\n\n", "text/latex": "\\begin{description}\n\\item[\\$value] 4\n\\item[\\$visible] TRUE\n\\end{description}\n"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "2+2\nwithVisible(2+2)", "cell_type": "code", "execution_count": 4}, {"metadata": {}, "source": "\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f `p<-x` \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f `print(x)` \u043f\u043e\u043c\u0438\u043c\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f,   \u0435\u0449\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `x`, \u043d\u043e \u043e\u043d\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044e\u0442 \u0430\u0442\u0442\u0440\u0438\u0431\u0443\u0442 `visible=FALSE` \u0447\u0442\u043e\u0431\u044b \u043d\u0430 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0435\u0449\u0435 \u0440\u0430\u0437 \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u043b\u043e\u0441\u044c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0430\u043d\u0438\u0435.", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 5", "text/html": "5", "text/markdown": "5", "text/latex": "5"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "p <- q <- 5\np", "cell_type": "code", "execution_count": 5}, {"metadata": {}, "source": "\u0442\u043e \u0435\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `q <- 5` \u0432\u0435\u0440\u043d\u0443\u043b \u0437\u043d\u0430\u0447\u0435\u0438\u043d\u0435 `5` \u0438 \u043e\u043d\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u043b\u043e\u0441\u044c `p` \u043d\u043e \u043d\u0435 \u0432\u044b\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d", "cell_type": "markdown"}, {"outputs": [], "metadata": {"collapsed": true, "trusted": true}, "source": "r <- 5", "cell_type": "code", "execution_count": 6}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 9", "text/html": "9", "text/markdown": "9", "text/latex": "9"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "(r <- 4+r)", "cell_type": "code", "execution_count": 7}, {"metadata": {}, "source": "\u0412\u0437\u044f\u0432 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u043a\u0440\u0443\u0433\u043b\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438, \u0432\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u043b\u043d\u0438\u0432\u0430\u0435\u0442\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0432 TRUE. \u0415\u0449\u0435 \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 `print()`:\n\n", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "[1] 3\n[1] 5\n[1] 6\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "print(1+print(2+print(3)))", "cell_type": "code", "execution_count": 8}, {"metadata": {}, "source": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0432\u044b\u0434\u0430\u0447\u0443 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0435\u0433\u043e \u043e\u043a\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0435\u0439 `invisible(\u0432\u044b\u0440\u0430\u0436)` ", "cell_type": "markdown"}, {"outputs": [], "metadata": {"collapsed": false, "trusted": true}, "source": "{p <- 10;q <- 2 ; invisible((p/q)^q )}", "cell_type": "code", "execution_count": 9}, {"metadata": {}, "source": "\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f:", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: 25"}], "metadata": {"collapsed": false, "trusted": true}, "source": "cat(\"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\",{p <- 10;q <- 2 ; invisible((p/q)^q )})", "cell_type": "code", "execution_count": 10}, {"metadata": {}, "source": "`cat(x1,x2, ...)` \u0432\u0441\u0435 \u0441\u0432\u043e\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0432 \u0442\u0438\u043f `character` \u0438 \u0432\u044b\u0434\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0437\u0430 \u0434\u0440\u0443\u0433\u0438\u043c.", "cell_type": "markdown"}, {"metadata": {}, "source": "## \u0423\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\n\n`if (\u0443\u0441\u043b\u043e\u0432\u0438\u0435) {\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f-\u0435\u0441\u043b\u0438-TRUE} ` \n\n\u0438\u043b\u0438 \n\n`if (\u0443\u0441\u043b\u043e\u0432\u0438\u0435) {\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f-\u0435\u0441\u043b\u0438-TREE} else {\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f-\u0435\u0441\u043b\u0438-FALSE}` ", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "[1] \"Teenager\"\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "age <- 13\nif(age < 20 && age>=10) { print(\"Teenager\")}", "cell_type": "code", "execution_count": 11}, {"outputs": [{"traceback": ["Error in if (age < 20 && age >= 10) {: \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0430 \u043d\u0443\u0436\u043d\u043e TRUE/FALSE\nTraceback:\n"], "output_type": "error", "ename": "ERROR", "evalue": "Error in if (age < 20 && age >= 10) {: \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0430 \u043d\u0443\u0436\u043d\u043e TRUE/FALSE\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "age <- NA\nif(age < 20 && age>=10) {\n    print(\"Teenager\")\n}", "cell_type": "code", "execution_count": 12}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "[1] \"young\"\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "age <- 23\n\nif(age<11){\n  print(\"Child\")\n} else if(age<20) {\n  print(\"Teenager\")    \n} else if (age<45) {\n  print(\"young\")\n} else {\n  print(\"young forever\")\n}\n", "cell_type": "code", "execution_count": 16}, {"metadata": {}, "source": "\u041c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 `if`", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "[1] \"young forever\"\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "age <- 63\n\nmessage <- if(age<11){\n  \"Child\"\n} else if(age<20) {\n  \"Teenager\"    \n} else if (age<45) {\n  \"young\"\n} else {\n  \"young forever\"\n}\n\nprint(message)", "cell_type": "code", "execution_count": 18}, {"metadata": {}, "source": "## \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0432\u044b\u0431\u043e\u0440\u0430 switch (\u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u0435\u043b\u044c)\n\n\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 `switch(EXPR=\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435-selector , \u0432\u0430\u0440\u0438\u0430\u043d\u04421, \u0432\u0430\u0440\u0438\u0430\u043d\u04422, ... )` \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435-selector \u0438 \u043f\u043e \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u043d\u0438\u044e \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442/\u0432\u044b\u0447\u0438\u043b\u044f\u0435\u0442 \u043d\u0443\u0436\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442. ", "cell_type": "markdown"}, {"metadata": {}, "source": "### switch \u0441 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0432\u044b\u0431\u043e\u0440\u0430", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] \"yellow\"", "text/html": "'yellow'", "text/markdown": "'yellow'", "text/latex": "'yellow'"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "ncolor=2\nswitch(EXPR = ncolor, \"green\",\"yellow\",\"blue\" )", "cell_type": "code", "execution_count": 14}, {"metadata": {}, "source": "### switch \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0432\u044b\u0431\u043e\u0440\u0430", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] \"red\"", "text/html": "'red'", "text/markdown": "'red'", "text/latex": "'red'"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "signal_name = \"stop\"\nswitch(EXPR = signal_name,go=\"green\",ready=\"yellow\",stop=,full_stop=\"red\")", "cell_type": "code", "execution_count": 13}, {"metadata": {}, "source": "## \u0426\u0438\u043a\u043b\u044b\n\n\u0426\u0438\u043a\u043b\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0442\u044c \u0433\u0440\u0443\u043f\u043f\u0443 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437. \u0415\u0441\u0442\u044c 3 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0432 \u044f\u0437\u044b\u043a R \u0446\u0438\u043a\u043b\u0430:\n\n* `repeat` (\u0432\u044b\u0445\u043e\u0434 \u043f\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0435 `break`) \n* `while` (\u0432\u044b\u0445\u043e\u0434, \u043a\u043e\u0433\u0434\u0430 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u043d\u0435\u0442 \u043b\u043e\u0436\u043d\u044b\u043c)\n* `for` (\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0446\u0438\u043a\u043b\u0430 \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438)\n", "cell_type": "markdown"}, {"metadata": {}, "source": "### repeat { block}", "cell_type": "markdown"}, {"metadata": {}, "source": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c **\u043d\u0435 \u0432 jupyter notebook** \u0430 \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u0435 (R, RStudio), \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \n\n`readline(prompt = \"enter number (or q to exti): \")`  \n\n\u0432\u044b\u0434\u0430\u0435\u0442 \u043f\u0440\u0438\u0433\u043b\u0430\u0448\u0435\u043d\u0438\u0435 \u043a \u0432\u0432\u043e\u0434\u0443, \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442  \u0438 \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0432\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.", "cell_type": "markdown"}, {"outputs": [], "metadata": {"collapsed": true, "trusted": true}, "source": "repeat {\n  answ <-  readline(prompt = \"enter number (or q to exti): \")\n  if(answ==\"q\" || answ ==\"Q\") { print(\"goodbye!\") ; break}\n  num <- as.numeric(answ)\n  print(sprintf(\"%g^3=%g\",num,num^3))\n}  \n  ", "cell_type": "code", "execution_count": null}, {"metadata": {}, "source": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0439 \u0434\u0438\u0430\u043b\u043e\u0433 \u0441 \u044d\u0442\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043e\u0439:\n\n```\nenter number (or q to exti): 11\n[1] \"11^3=1331\"\nenter number (or q to exti): 2\n[1] \"2^3=8\"\nenter number (or q to exti): 3\n[1] \"3^3=27\"\nenter number (or q to exti): a\n[1] \"NA^3=NA\"\nenter number (or q to exti): q\n[1] \"goodbye!\"\n\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435:\n\u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u044b NA \n```", "cell_type": "markdown"}, {"metadata": {}, "source": "\u0426\u0438\u043a\u043b `repeat` \u0445\u043e\u0440\u043e\u0448 \u0434\u043b\u044f \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0439, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u0435\u0441 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 (\u0432\u0432\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0447\u0442\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445), \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u0430\u044f\u0435\u0442\u0441\u044f \u0443\u0441\u043b\u043e\u0432\u0438\u0435 (\u0441\u0447\u0438\u0442\u0430\u043b\u0438\u0441\u044c \u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043a\u043e\u043d\u0446\u0430?).", "cell_type": "markdown"}, {"metadata": {}, "source": "## \u0426\u0438\u043a\u043b \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 ---  `for`\n\n`for  (var in \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c) {\u0442\u0435\u043b\u043e \u0446\u0438\u043a\u043b\u0430}`\n\n\n\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f `var` \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0438  \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442 \u0441 \u0442\u0430\u043a\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u0443 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0435\u043b\u043e \u0446\u0438\u043a\u043b\u0430.", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": " [1]  1  2  3  4  5  6  7  8  9 10\n[1] \"abc\"\n[1] 1 2\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "for( i in list(a=1:10,b=\"abc\",c=1:2))\n{   \n  print(i)\n}", "cell_type": "code", "execution_count": 19}, {"metadata": {}, "source": "\u0415\u0449\u0451 \u043f\u0440\u0438\u043c\u0435\u0440:", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "1   1 2 3 4 5 6 7 8 9 10 \n2   abc \n3   1 2 \n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "l1  <- list(a=1:10,b=\"abc\",c=1:2)\n\nfor( i in seq_along(l1))\n{   \n  cat(i,\" \",l1[[i]],\"\\n\")\n}", "cell_type": "code", "execution_count": 21}, {"metadata": {}, "source": "\u041a\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u043b\u0441\u0442\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u0442\u0435\u043b\u043e \u0446\u0438\u043a\u043b\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u0442\u043e \u0440\u0430\u0437:", "cell_type": "raw"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "\u0413\u0430\u0432! \u0413\u0430\u0432! \u0413\u0430\u0432! \u0413\u0430\u0432! \u0413\u0430\u0432! \n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "n=5\nfor (i in 1:n){\n    cat(\"\u0413\u0430\u0432! \")\n}\ncat('\\n')", "cell_type": "code", "execution_count": 24}, {"metadata": {}, "source": "- - - \n\n*\u0417\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u0435* \u0427\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u044f `cat()` \u043e\u0442 `print()` ?", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "[1] \"one\\ntwo\"\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "print(\"one\\ntwo\") ", "cell_type": "code", "execution_count": 26}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "one\ntwo"}], "metadata": {"collapsed": false, "trusted": true}, "source": "cat(\"one\\ntwo\")", "cell_type": "code", "execution_count": 27}, {"metadata": {}, "source": "- - -\n*\u0417\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u0435* \u0427\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u044f `cat()` \u043e\u0442 `paste()` ?", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "1 2 3 4 5 a b c d e"}], "metadata": {"collapsed": false, "trusted": true}, "source": "cat(1:5, letters[1:5])", "cell_type": "code", "execution_count": 29}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] \"1 a\" \"2 b\" \"3 c\" \"4 d\" \"5 e\"", "text/html": "<ol class=list-inline>\n\t<li>'1 a'</li>\n\t<li>'2 b'</li>\n\t<li>'3 c'</li>\n\t<li>'4 d'</li>\n\t<li>'5 e'</li>\n</ol>\n", "text/markdown": "1. '1 a'\n2. '2 b'\n3. '3 c'\n4. '4 d'\n5. '5 e'\n\n\n", "text/latex": "\\begin{enumerate*}\n\\item '1 a'\n\\item '2 b'\n\\item '3 c'\n\\item '4 d'\n\\item '5 e'\n\\end{enumerate*}\n"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "paste(1:5, letters[1:5])", "cell_type": "code", "execution_count": 30}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] \"1a\" \"2b\" \"3c\" \"4d\" \"5e\"", "text/html": "<ol class=list-inline>\n\t<li>'1a'</li>\n\t<li>'2b'</li>\n\t<li>'3c'</li>\n\t<li>'4d'</li>\n\t<li>'5e'</li>\n</ol>\n", "text/markdown": "1. '1a'\n2. '2b'\n3. '3c'\n4. '4d'\n5. '5e'\n\n\n", "text/latex": "\\begin{enumerate*}\n\\item '1a'\n\\item '2b'\n\\item '3c'\n\\item '4d'\n\\item '5e'\n\\end{enumerate*}\n"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "paste0(1:5, letters[1:5])", "cell_type": "code", "execution_count": 31}, {"metadata": {}, "source": "\u0412\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u0446\u0438\u043a\u043b\u044b  for -- \u0440\u0430\u0441\u043f\u0435\u0447\u0430\u0442\u043a\u0430 \u043c\u0430\u0442\u0440\u0438\u0446\u044b:", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "1  3  5  \n2  4  6  \n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "x <- matrix(1:6, 2, 3)\nfor(i in seq_len(nrow(x))) {\n  for(j in seq_len(ncol(x))) {\n    cat(x[i, j],\" \")\n  }\n  cat(\"\\n\")\n}", "cell_type": "code", "execution_count": 32}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n"}], "metadata": {"collapsed": false, "trusted": true}, "source": "print(x)", "cell_type": "code", "execution_count": 33}, {"metadata": {}, "source": "### \u0421\u0443\u043c\u043c\u0430 \u0432\u0435\u043a\u0442\u043e\u0440\u0430 3 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438", "cell_type": "markdown"}, {"metadata": {}, "source": "#### \u0421\u043f\u043e\u0441\u043e\u0431 1: \u0446\u0438\u043a\u043b for ", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 16", "text/html": "16", "text/markdown": "16", "text/latex": "16"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "vv  <-  c(1,3,5,7)\nvsum  <- 0 \nfor ( n in vv) { vsum  <- vsum+n }  \nvsum", "cell_type": "code", "execution_count": 37}, {"metadata": {}, "source": "#### \u0421\u043f\u043e\u0441\u043e\u0431 2: \u0446\u0438\u043a\u043b while ", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 16", "text/html": "16", "text/markdown": "16", "text/latex": "16"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "i <- 1 \nvsum  <- 0 \nwhile(i<=length(vv)) {\n  vsum  <- vsum+vv[i] \n  i <- i+1\n}\nvsum", "cell_type": "code", "execution_count": 38}, {"metadata": {}, "source": "#### \u0421\u043f\u043e\u0441\u043e\u0431 3: \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f sum()", "cell_type": "markdown"}, {"outputs": [{"metadata": {}, "data": {"text/plain": "[1] 16", "text/html": "16", "text/markdown": "16", "text/latex": "16"}, "output_type": "display_data"}], "metadata": {"collapsed": false, "trusted": true}, "source": "sum(vv)", "cell_type": "code", "execution_count": 36}, {"metadata": {}, "source": "### \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 -- \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0431\u043b\u0443\u0436\u0434\u0430\u043d\u0438\u0435", "cell_type": "markdown"}, {"outputs": [{"name": "stdout", "output_type": "stream", "text": "5  4  5  4  5  4  3  4  5  6  7  6  7  8  9  10  9  10  "}], "metadata": {"collapsed": false, "trusted": true}, "source": "z <- 5\nwhile(z >= 3 && z <= 10) {\n  cat(z,' ')\n  coin <- rbinom(1, 1, 0.5)\n  if(coin == 1) { ## random walk\n    z <- z + 1\n  } else {\n    z <- z - 1\n  }\n}\n", "cell_type": "code", "execution_count": 40}, {"outputs": [], "metadata": {"collapsed": true, "trusted": true}, "source": "", "cell_type": "code", "execution_count": null}], "nbformat": 4}